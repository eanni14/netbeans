/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projek;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.text.ParseException;
import java.util.Date;
import javax.swing.JButton;

/**
 *
 * @author ACER
 */
public class Input_menu extends javax.swing.JFrame {
    
    NumberFormat nf = NumberFormat.getNumberInstance(new Locale("in", "ID"));
    private Connection koneksi;
    
    /**
     * Creates new form Input_menu
     */
    public Input_menu() {
        initComponents();
        KoneksiDatabase();
        TampilData();
        setLocationRelativeTo(this);
    }

    private void KoneksiDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException cnf) {
        }
        try {
            koneksi = DriverManager.getConnection("jdbc:mysql://localhost/db_cafe", "root", "");;
        } catch (SQLException se) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Tidak Berhasil");
        } catch (Exception e) {
        }
    }

    private void TampilData() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Menu");
        model.addColumn("Nama Menu");
        model.addColumn("Kategori");
        model.addColumn("Harga Jual");
        
        tblmenu.setModel(model);
        try {
            java.sql.Statement stat = koneksi.createStatement();
            ResultSet data = stat.executeQuery("SELECT `Kd_menu`, `Nm_menu`, `Kategori`, `Harga` FROM menu_makanan");
            while (data.next()) {
                model.addRow(new Object[]{
                    data.getString("Kd_menu"),
                    data.getString("Nm_menu"),
                    data.getString("Kategori"),
                    data.getString("Harga"),
                });
                tblmenu.setModel(model);
            }        
        } catch (Exception e) {
            System.err.println("Terjadi Kesalahan :" + e);
        }
    }

    private boolean cekDataDariDatabase(String kode) {
        boolean dataDitemukan = false;

    try {
        // Menghubungkan ke database
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/db_cafe", "root", "");

        // Mengeksekusi query untuk mengambil data berdasarkan kode menu
        String sql = "SELECT * FROM menu_makanan WHERE Kd_menu = ?";
        PreparedStatement preparedStatement = connection.prepareStatement(sql);
        preparedStatement.setString(1, kode);
        ResultSet resultSet = preparedStatement.executeQuery();

        // Memeriksa apakah data ditemukan
        if (resultSet.next()) {
            dataDitemukan = true;
        }

        // Menutup koneksi dan sumber daya
        resultSet.close();
        preparedStatement.close();
        connection.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }

    return dataDitemukan;
    }
    
    class menu extends Input_menu {
        String nama = "", kodemenu ="", kategori= "", hargajual = "", foto ="";
        public menu (){
         kodemenu = txtkode.getText();
         nama =  txtnama.getText();
         kategori = (String) cbkategori.getSelectedItem();
         hargajual = txtharga.getText();
        }
    }
    
    public void JumlahKarakter(KeyEvent e) {
        if (txtkode.getText().length() == 5) {
            e.consume();
            //Pesan Dialog Boleh Di Hapus Ini Hanya Sebagai Contoh
            JOptionPane.showMessageDialog(null, "Maksimal yang dimasukan Hanya 5 Karakter", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelImage11 = new impor.PanelImage1();
        bhome = new javax.swing.JButton();
        bkaryawan = new javax.swing.JButton();
        bpenjualan = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        panelImage1 = new impor.PanelImage();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblmenu = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtkode = new javax.swing.JTextField();
        txtnama = new javax.swing.JTextField();
        txtharga = new javax.swing.JTextField();
        cbkategori = new javax.swing.JComboBox<>();
        lblfoto = new javax.swing.JLabel();
        bsimpan = new javax.swing.JButton();
        bubah = new javax.swing.JButton();
        bbersihkan = new javax.swing.JButton();
        bhapus = new javax.swing.JButton();
        bpilih = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtcari = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        panelImage11.setBackground(new java.awt.Color(0, 153, 204));

        javax.swing.GroupLayout panelImage11Layout = new javax.swing.GroupLayout(panelImage11);
        panelImage11.setLayout(panelImage11Layout);
        panelImage11Layout.setHorizontalGroup(
            panelImage11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 152, Short.MAX_VALUE)
        );
        panelImage11Layout.setVerticalGroup(
            panelImage11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 152, Short.MAX_VALUE)
        );

        bhome.setBackground(new java.awt.Color(127, 79, 62));
        bhome.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bhome.setForeground(new java.awt.Color(255, 255, 255));
        bhome.setText("Home");
        bhome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bhome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bhomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bhomeMouseExited(evt);
            }
        });
        bhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bhomeActionPerformed(evt);
            }
        });

        bkaryawan.setBackground(new java.awt.Color(127, 79, 62));
        bkaryawan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bkaryawan.setForeground(new java.awt.Color(255, 255, 255));
        bkaryawan.setText("Input Karyawan");
        bkaryawan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bkaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bkaryawanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bkaryawanMouseExited(evt);
            }
        });
        bkaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkaryawanActionPerformed(evt);
            }
        });

        bpenjualan.setBackground(new java.awt.Color(127, 79, 62));
        bpenjualan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bpenjualan.setForeground(new java.awt.Color(255, 255, 255));
        bpenjualan.setText("Data Penjualan");
        bpenjualan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bpenjualan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bpenjualanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bpenjualanMouseExited(evt);
            }
        });
        bpenjualan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpenjualanActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Powered by");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 82, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bhome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bpenjualan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bkaryawan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(81, 81, 81))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(panelImage11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(96, 96, 96))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(panelImage11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(bhome, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bkaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bpenjualan, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(37, 37, 37))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 3, 50)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CAFE YR JIWA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        tblmenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmenuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblmenu);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Kode Menu");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Nama Menu");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Kategori");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Harga Jual");

        txtkode.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtkode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkodeActionPerformed(evt);
            }
        });
        txtkode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtkodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtkodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtkodeKeyTyped(evt);
            }
        });

        txtnama.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtnama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnamaActionPerformed(evt);
            }
        });
        txtnama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnamaKeyTyped(evt);
            }
        });

        txtharga.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtharga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthargaActionPerformed(evt);
            }
        });
        txtharga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txthargaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txthargaKeyTyped(evt);
            }
        });

        cbkategori.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbkategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----- Kategori Menu -----", "Makanan", "Minuman", "Pelengkap" }));
        cbkategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbkategoriActionPerformed(evt);
            }
        });

        lblfoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        bsimpan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bsimpan.setText("Simpan");
        bsimpan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsimpanActionPerformed(evt);
            }
        });

        bubah.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bubah.setText("Ubah");
        bubah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubahActionPerformed(evt);
            }
        });

        bbersihkan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bbersihkan.setText("Bersih");
        bbersihkan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bbersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbersihkanActionPerformed(evt);
            }
        });

        bhapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bhapus.setText("Hapus");
        bhapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bhapusActionPerformed(evt);
            }
        });

        bpilih.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bpilih.setText("Pilih Gambar");
        bpilih.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bpilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpilihActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Cari Menu");

        txtcari.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtcari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcariKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcariKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelImage1Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelImage1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtharga)
                                    .addGroup(panelImage1Layout.createSequentialGroup()
                                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelImage1Layout.createSequentialGroup()
                                                .addComponent(bbersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(bhapus, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(panelImage1Layout.createSequentialGroup()
                                                .addComponent(bsimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(bubah, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(panelImage1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtnama, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelImage1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbkategori, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelImage1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtkode, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(65, 65, 65)
                        .addComponent(lblfoto, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelImage1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImage1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bpilih)
                .addGap(257, 257, 257))
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImage1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelImage1Layout.createSequentialGroup()
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtkode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbkategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtharga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bsimpan)
                            .addComponent(bubah))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bbersihkan)
                            .addComponent(bhapus)))
                    .addComponent(lblfoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bpilih)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelImage1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bbersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbersihkanActionPerformed
        txtkode.setText("");
        txtnama.setText("");
        cbkategori.setSelectedIndex(0);
        txtharga.setText("");
        lblfoto.setIcon(null);
        txtkode.requestFocus();
    }//GEN-LAST:event_bbersihkanActionPerformed

    private void bpilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpilihActionPerformed
        menu a = new menu();
if (a.kodemenu.equals("") || a.nama.equals("") || cbkategori.getSelectedIndex() == 0 || a.hargajual.equals("")) {
    JOptionPane.showMessageDialog(null, "Pastikan Semua Data Terisi!");
} else {
    JFileChooser fchoser = new JFileChooser();
    fchoser.showOpenDialog(null);
    File f = fchoser.getSelectedFile();
    if (f != null) {
        String fname = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname);
        try {
            File image = new File(fname);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            int readnum;
            while ((readnum = fis.read(buf)) != -1) {
                baos.write(buf, 0, readnum);
            }
            baos.toByteArray();
            lblfoto.setIcon(resizeImage(fname, buf));
        } catch (Exception e) {
            e.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(null, "Anda tidak memilih file atau membatalkan dialog!");
        // Tangani situasi ketika file tidak dipilih atau dialog dibatalkan
    }
}
    }//GEN-LAST:event_bpilihActionPerformed
public ImageIcon resizeImage(String imagePath, byte[] pic) {
    ImageIcon myImage = null;
    if (imagePath != null) {
        myImage = new ImageIcon(imagePath);
    } else {
        myImage = new ImageIcon(pic);
    }
    Image img = myImage.getImage();

    // Mengatur ukuran tetap untuk lblfoto
    int lebarFoto = 180;
    int tinggiFoto = 210;

    Image img2 = img.getScaledInstance(lebarFoto, tinggiFoto, Image.SCALE_SMOOTH);
    ImageIcon image = new ImageIcon(img2);
    return image;
}

    private void bhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bhomeActionPerformed
        new Home_Admin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bhomeActionPerformed

    private void bkaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkaryawanActionPerformed
        new Input_karyawan().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bkaryawanActionPerformed

    private void bpenjualanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpenjualanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bpenjualanActionPerformed

    private void txtkodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkodeKeyReleased
        txtkode.setText(txtkode.getText().toUpperCase());
    }//GEN-LAST:event_txtkodeKeyReleased

    private void txtkodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkodeKeyTyped
        JumlahKarakter(evt);
        char c = evt.getKeyChar();
if (!(Character.isLetterOrDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_ENTER))) {
    evt.consume();
    JOptionPane.showMessageDialog(null, "Inputkan Huruf dan Angka Saja!", "Peringatan", JOptionPane.WARNING_MESSAGE);
}
    }//GEN-LAST:event_txtkodeKeyTyped

    private void txtkodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkodeKeyPressed

    }//GEN-LAST:event_txtkodeKeyPressed

    private void txtnamaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnamaKeyTyped
        char c = evt.getKeyChar();
if (!(Character.isLetter(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_SPACE) || (c == '\'') || (c == KeyEvent.VK_ENTER))) {
    evt.consume();
    JOptionPane.showMessageDialog(null, "Inputkan Huruf Saja!", "Peringatan", JOptionPane.WARNING_MESSAGE);
}
    }//GEN-LAST:event_txtnamaKeyTyped

    private void txthargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthargaKeyTyped
        char c = evt.getKeyChar();
if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)|| (c == KeyEvent.VK_ENTER))){
    evt.consume();
    JOptionPane.showMessageDialog(null, "Inputkan Angka Saja!", "Peringatan", JOptionPane.WARNING_MESSAGE);
}
    }//GEN-LAST:event_txthargaKeyTyped

    private void txthargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthargaActionPerformed
        bpilih.requestFocus();
    }//GEN-LAST:event_txthargaActionPerformed

    private void txthargaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthargaKeyReleased
        String inputAngka = txtharga.getText().toString().replace("Rp", "").replace(".", "").replace(" ","").replace(",", "");

// Periksa jika inputAngka masih kosong
if (inputAngka.isEmpty()) {
    txtharga.setText("Rp "); 
} else {
    String hasil = nf.format(Long.parseLong(inputAngka));
    txtharga.setText("Rp " + hasil);
}
    }//GEN-LAST:event_txthargaKeyReleased

    private void bsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsimpanActionPerformed
String kode = txtkode.getText();
String nama = txtnama.getText();
String kategori = (String) cbkategori.getSelectedItem();
String harga = txtharga.getText();
Icon foto = lblfoto.getIcon();

if (txtkode.getText().trim().equals("")) {
    JOptionPane.showMessageDialog(null, "Mohon Isikan Kode Menu", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
    txtkode.requestFocus();
} else if (txtnama.getText().trim().equals("")) {
    JOptionPane.showMessageDialog(null, "Mohon Isikan Nama Menu", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
    txtnama.requestFocus();
} else if (cbkategori.getSelectedIndex() == 0) {
    JOptionPane.showMessageDialog(null, "Mohon Pilih Kategori Menu", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
    cbkategori.requestFocus();
} else if (txtharga.getText().trim().equals("")) {
    JOptionPane.showMessageDialog(null, "Mohon Isikan Harga Jual", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
    txtharga.requestFocus();
} else if (foto == null) {
    JOptionPane.showMessageDialog(null, "Mohon Isikan Foto", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
    lblfoto.requestFocus();
} else {
    try {
        java.sql.Statement stat = koneksi.createStatement();
        ResultSet data = stat.executeQuery("SELECT * FROM `menu_makanan` WHERE Kd_menu ='" + txtkode.getText() + "'");
        if (data.next()) {
            JOptionPane.showMessageDialog(null, "Kode Telah Diinputkan", "PERHATIAN", JOptionPane.WARNING_MESSAGE);
            txtkode.requestFocus();
        } else {
            // Mengambil gambar dari Icon
            Image image = ((ImageIcon) foto).getImage();

            // Membuat BufferedImage
            BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
            Graphics2D graphics = bufferedImage.createGraphics();
            graphics.drawImage(image, 0, 0, null);
            graphics.dispose();

            // Mengonversi BufferedImage menjadi byte[]
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            try {
                ImageIO.write(bufferedImage, "jpg", baos);
            } catch (IOException e) {
                e.printStackTrace();
            }
            byte[] fotoBytes = baos.toByteArray();

            String sql = "INSERT INTO menu_makanan (Kd_menu, Nm_menu, Kategori, Harga, Foto) " +
                "VALUES (?, ?, ?, ?, ?)";

            PreparedStatement preparedStatement = koneksi.prepareStatement(sql);
            preparedStatement.setString(1, kode);
            preparedStatement.setString(2, nama);
            preparedStatement.setString(3, kategori);
            preparedStatement.setString(4, harga);
            preparedStatement.setBytes(5, fotoBytes);

            preparedStatement.executeUpdate();

            txtkode.setText("");
            txtnama.setText("");
            cbkategori.setSelectedIndex(0);
            txtharga.setText("");
            lblfoto.setIcon(null  );
            txtkode.requestFocus();

            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan", "SUKSES", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        }
        stat.close();
    } catch (Exception exc) {
        System.err.println("Terjadi Kesalahan: " + exc);
    }
}
    }//GEN-LAST:event_bsimpanActionPerformed

    private void bubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubahActionPerformed
        String kode = txtkode.getText();
        String nama = txtnama.getText();
        String kategori = (String) cbkategori.getSelectedItem();
        String harga = txtharga.getText();
        Icon foto = lblfoto.getIcon();

if (kode.equals("") || nama.equals("") || kategori.equals("") || harga.equals("") || foto == null) {
    JOptionPane.showMessageDialog(null, "Pastikan Semua Data Terisi!");
} else {
    // Periksa apakah data diambil dari database
    boolean dataDariDatabase = cekDataDariDatabase(kode);
    if (!dataDariDatabase) {
        JOptionPane.showMessageDialog(null, "Data tidak bisa diubah karena tidak diambil dari database");
    } else {
        int dialogResult = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan merubah data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                // Kode perubahan data
                // Mengubah ImageIcon menjadi Image
                Image image = ((ImageIcon) foto).getImage();
                // Mengonversi Image menjadi BufferedImage
                BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
                Graphics2D g2d = bufferedImage.createGraphics();
                g2d.drawImage(image, 0, 0, null);
                g2d.dispose();
                // Mengonversi BufferedImage menjadi byte[]
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                try {
                    ImageIO.write(bufferedImage, "jpg", baos);
                } catch (IOException e) {
                    e.printStackTrace();
                }
                byte[] fotoBytes = baos.toByteArray();

                String sql = "UPDATE menu_makanan SET Nm_menu = ?, Kategori = ?, Harga = ?, Foto = ? WHERE Kd_menu = ?";
                PreparedStatement preparedStatement = koneksi.prepareStatement(sql);
                preparedStatement.setString(1, nama);
                preparedStatement.setString(2, kategori);
                preparedStatement.setString(3, harga);
                preparedStatement.setBytes(4, fotoBytes);
                preparedStatement.setString(5, kode);

                int rowsUpdated = preparedStatement.executeUpdate();
                // Menampilkan konfirmasi setelah perubahan data berhasil
                JOptionPane.showMessageDialog(null, "Data berhasil diubah", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                // Refresh tampilan data
                TampilData();
                txtkode.setText("");
                txtnama.setText("");
                cbkategori.setSelectedIndex(0);
                txtharga.setText("");
                lblfoto.setIcon(null);
                txtkode.requestFocus();

            } catch (Exception exc) {
                System.err.println("Terjadi Kesalahan: " + exc);
            }
        }
    }
}
   
    }//GEN-LAST:event_bubahActionPerformed

    private void tblmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmenuMouseClicked
        int baris = tblmenu.getSelectedRow();
if (baris != -1) {
    String kodeMenu = tblmenu.getValueAt(baris, 0).toString();

    try {
        // Mengambil foto dari database berdasarkan kode menu
        String sql = "SELECT Foto FROM menu_makanan WHERE Kd_menu = ?";
        PreparedStatement preparedStatement = koneksi.prepareStatement(sql);
        preparedStatement.setString(1, kodeMenu);
        ResultSet resultSet = preparedStatement.executeQuery();

        if (resultSet.next()) {
            // Mengubah data foto menjadi objek ImageIcon
            byte[] fotoBytes = resultSet.getBytes("Foto");
            ImageIcon imageIcon = new ImageIcon(fotoBytes);

            // Mengatur ukuran tetap untuk lblfoto
            int lebarFoto = 180; // Ganti dengan lebar yang diinginkan
            int tinggiFoto = 210; // Ganti dengan tinggi yang diinginkan

            // Mengatur ikon pada lblfoto dengan ukuran tetap
            Image image = imageIcon.getImage().getScaledInstance(lebarFoto, tinggiFoto, Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(image);
            lblfoto.setIcon(scaledIcon);
            lblfoto.setPreferredSize(new Dimension(lebarFoto, tinggiFoto));
            lblfoto.revalidate();
            lblfoto.repaint();
        } else {
            // Jika foto tidak ditemukan, atur lblfoto menjadi kosong
            lblfoto.setIcon(null);
        }
    } catch (Exception exc) {
        System.err.println("Terjadi Kesalahan: " + exc);
    }
    // Menampilkan data lainnya pada komponen input sesuai dengan baris yang dipilih
    txtkode.setText(tblmenu.getValueAt(baris, 0).toString());
    txtnama.setText(tblmenu.getValueAt(baris, 1).toString());
    cbkategori.setSelectedItem(tblmenu.getValueAt(baris, 2).toString());
    txtharga.setText(tblmenu.getValueAt(baris, 3).toString());
    txtkode.setEnabled(false);
    txtnama.requestFocus();  
} else {
    JOptionPane.showMessageDialog(null, "Anda belum memilih data yang akan diubah.", "Peringatan", JOptionPane.WARNING_MESSAGE);
}
    }//GEN-LAST:event_tblmenuMouseClicked

    private void bhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bhapusActionPerformed
        int baris = tblmenu.getSelectedRow();
if (baris == -1) {
    JOptionPane.showMessageDialog(null, "Pilih Data Terlebih Dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
} else {
    int ok = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Ingin Menghapus Data Ini?", "Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
    if (ok == 0) {
        String kode = txtkode.getText().trim();
        String sql = "DELETE FROM menu_makanan WHERE Kd_menu=?";
        try {
            PreparedStatement preparedStatement = koneksi.prepareStatement(sql);
            preparedStatement.setString(1, kode);
            int rowsDeleted = preparedStatement.executeUpdate();

            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "Data Berhasil di Hapus", "Hapus Data", JOptionPane.INFORMATION_MESSAGE);
                txtkode.setText("");
                txtnama.setText("");
                cbkategori.setSelectedIndex(0);
                txtharga.setText("");
                lblfoto.setIcon(null);
                txtkode.requestFocus();
                TampilData();
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan", "Gagal", JOptionPane.ERROR_MESSAGE);
            }

            preparedStatement.close();
        } catch (SQLException exc) {
            System.err.println(sql);
            System.err.println("Error : " + exc);
        }
    }
}
    }//GEN-LAST:event_bhapusActionPerformed

    private void txtcariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyTyped
        String keyword = txtcari.getText().trim();
        if (keyword.isEmpty()) {
            TampilData();
            return; // Jangan melakukan pencarian jika keyword kosong
        }
    }//GEN-LAST:event_txtcariKeyTyped

    private void txtcariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyPressed
        String keyword = txtcari.getText().trim();
        if (keyword.isEmpty()) {
            TampilData();
            return; // Jangan melakukan pencarian jika keyword kosong
        }

try {
    Statement statement = koneksi.createStatement();
    // Query untuk pencarian data
    String query = "SELECT * FROM menu_makanan WHERE Kd_menu LIKE '%" + keyword + "%' OR Nm_menu LIKE '%" + keyword + "%' OR Kategori LIKE '%" + keyword + "%'";
    // Eksekusi query
    ResultSet result = statement.executeQuery(query);

    // Buat model tabel dan tambahkan kolom
    DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Menu");
        model.addColumn("Nama Menu");
        model.addColumn("Kategori");
        model.addColumn("Harga Jual");

    // Tambahkan data hasil pencarian ke dalam tabel
    while (result.next()) {
        model.addRow(new Object[] {
            result.getString("Kd_menu"),
            result.getString("Nm_menu"),
            result.getString("Kategori"),
            result.getString("Harga")
        });
    }

    // Tampilkan hasil pencarian pada tabel
    tblmenu.setModel(model);
    statement.close();
} catch (SQLException e) {
    e.printStackTrace();
}
    }//GEN-LAST:event_txtcariKeyPressed

    private void txtkodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtkodeActionPerformed
        txtnama.requestFocus();
    }//GEN-LAST:event_txtkodeActionPerformed

    private void txtnamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnamaActionPerformed
        cbkategori.requestFocus();
    }//GEN-LAST:event_txtnamaActionPerformed

    private void cbkategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbkategoriActionPerformed
        txtharga.requestFocus();
    }//GEN-LAST:event_cbkategoriActionPerformed

    private void bhomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bhomeMouseEntered
        JButton bhome = (JButton) evt.getSource(); // mendapatkan button yang menjadi sumber event
    bhome.setBackground(new Color(255,0,0));
    }//GEN-LAST:event_bhomeMouseEntered

    private void bhomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bhomeMouseExited
        JButton bhome = (JButton) evt.getSource(); // mendapatkan button yang menjadi sumber event
    bhome.setBackground(new Color(127,79,62));
    }//GEN-LAST:event_bhomeMouseExited

    private void bkaryawanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bkaryawanMouseEntered
        JButton bkaryawan = (JButton) evt.getSource(); // mendapatkan button yang menjadi sumber event
    bkaryawan.setBackground(new Color(95,158,160));
    }//GEN-LAST:event_bkaryawanMouseEntered

    private void bkaryawanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bkaryawanMouseExited
        JButton bkaryawan = (JButton) evt.getSource(); // mendapatkan button yang menjadi sumber event
    bkaryawan.setBackground(new Color(127,79,62));
    }//GEN-LAST:event_bkaryawanMouseExited

    private void bpenjualanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bpenjualanMouseEntered
        JButton bpenjualan = (JButton) evt.getSource(); // mendapatkan button yang menjadi sumber event
    bpenjualan.setBackground(new Color(0,191,255));
    }//GEN-LAST:event_bpenjualanMouseEntered

    private void bpenjualanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bpenjualanMouseExited
        JButton bpenjualan = (JButton) evt.getSource(); // mendapatkan button yang menjadi sumber event
    bpenjualan.setBackground(new Color(127,79,62));
    }//GEN-LAST:event_bpenjualanMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Input_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Input_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Input_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Input_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Input_menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bbersihkan;
    private javax.swing.JButton bhapus;
    private javax.swing.JButton bhome;
    private javax.swing.JButton bkaryawan;
    private javax.swing.JButton bpenjualan;
    private javax.swing.JButton bpilih;
    private javax.swing.JButton bsimpan;
    private javax.swing.JButton bubah;
    private javax.swing.JComboBox<String> cbkategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblfoto;
    private impor.PanelImage panelImage1;
    private impor.PanelImage1 panelImage11;
    private javax.swing.JTable tblmenu;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtharga;
    private javax.swing.JTextField txtkode;
    private javax.swing.JTextField txtnama;
    // End of variables declaration//GEN-END:variables
}
